<Window x:Class="NotesApp.Views.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NotesApp.Views"
       xmlns:loginVm="clr-namespace:NotesApp.ViewModels"
        mc:Ignorable="d"
        Title="Login" 
        Icon="/notes.ico"
        Height="320" Width="320">
    <Window.Resources>
        <loginVm:LoginVM x:Key="loginVM" />
        <Storyboard x:Key="MoveUp">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0" Value="22">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseInOut" Springiness="2" Oscillations="10"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="4.3999999999999986">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseInOut" Springiness="2" Oscillations="10"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseInOut" Springiness="2" Oscillations="10"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="100"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="noAccountButton">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="noAccountButton">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="127"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource MoveUp}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="haveAccountButton">
            <BeginStoryboard Storyboard="{StaticResource MoveUp}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid x:Name="ContainerGrid">
        <StackPanel x:Name="loginStackpanel" 
                    Margin="20"
                    Visibility="Visible"
                    VerticalAlignment="Center">
            <TextBlock Text="UserName"/>
            <TextBox Text="{Binding User.UserName,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="Password"/>
            <TextBox Text="{Binding User.Password,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                     Margin="0 5 0 0"/>
            <Button x:Name="button" Content="Login"
                    Width="100"
                    Margin="0 5 0 0"
                    Command="{Binding LoginCommand}"
                    CommandParameter="{Binding User}"
                    VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"
                    >
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button Content="Don't have an account?"
                    x:Name="noAccountButton"
                    Margin="0 5 0 0"
                    HorizontalAlignment="Right"
                    Click="noAccountButton_Click" Width="127"/>
        </StackPanel>
        <StackPanel x:Name="registerStackpanel"
                    Margin="20"
                    Visibility="Collapsed"
                    VerticalAlignment="Center">
            <TextBlock Text="Name"/>
            <TextBox Text="{Binding User.Name,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="LastName"/>
            <TextBox Text="{Binding User.LastName,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                      Margin="0 5 0 0"/>
            <TextBlock Text="Email"/>
            <TextBox Text="{Binding User.Email,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                      Margin="0 5 0 0"/>
            <TextBlock Text="UserName"/>
            <TextBox Text="{Binding User.UserName,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                      Margin="0 5 0 0"/>
            <TextBlock Text="Password"/>
            <TextBox Text="{Binding User.Password,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                      Margin="0 5 0 0"/>
            <Button Content="Register"
                    Width="100"
                    Margin="0 5 0 0"
                    Command="{Binding RegisterCommand}"
                    CommandParameter="{Binding User}"
                    VerticalAlignment="Center"
                    />
            <Button Content="Have an account?"
                   x:Name="haveAccountButton"
                    Margin="0 5 0 0"
                    HorizontalAlignment="Right"
                    Click="haveAccountButton_Click"/>
        </StackPanel>
    </Grid>
</Window>
